// SPDX-License-Identifier: UNLICENSED 
pragma solidity >=0.4.22 <0.6.0;

contract SandwichFactory {

  struct Sandwich {
    string name;
    string status;
  }

  Sandwich[] public sandwiches;

  function fill() public {
    sandwiches.push(Sandwich("no1","ready"));
    sandwiches.push(Sandwich("no2","ready"));
    sandwiches.push(Sandwich("no3","ready"));
    sandwiches.push(Sandwich("no4","ready"));
    sandwiches.push(Sandwich("no5","ready"));
  }

  function eatSandwich(uint _index) public {
    Sandwich storage mySandwich = sandwiches[_index];
    mySandwich.status = "Eaten!";
    // the change made by using storage is persistent
    Sandwich memory anotherSandwich = sandwiches[_index + 1];
    anotherSandwich.status = "Eaten!";
    // the change made by using memory is NOT persistent
    // if we wanna make it persistent we can use the next line
    sandwiches[_index + 1] = anotherSandwich;
  }
}
